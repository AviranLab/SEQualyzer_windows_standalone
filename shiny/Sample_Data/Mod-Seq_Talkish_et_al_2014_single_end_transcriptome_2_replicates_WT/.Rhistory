cat(paste(dat[i]$sequence[-(1:4)], collapse=""))
cat("\n")
}
sink()
sink("Lucks.fas")
for (i in 1:8) {
cat(">")
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$sequence[-(1:4)], collapse=""))
cat("\n")
}
sink()
read.fasta(file= "Lucks.fas", forceDNAtolower= F)
names(dat[[1]])
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse=""))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse=" "))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(dat[[i]]$minus.counts[-(1:4)])
#   cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse=" "))
cat("\n")
cat("\n")
}
sink()
l <- readLines(file("Loughrey_et_al__minus__rep1__.txt", open="r"))
l
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
#   cat(dat[[i]]$minus.counts[-(1:4)])
cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
l <- readLines(file("Loughrey_et_al__minus__rep1__.txt", open="r"))
l
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$minus.pass[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep2__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$minus.pass.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep3__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$minus.pass.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$plus.pass[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep2__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$plus.pass.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep3__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$plus.pass.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep2__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep3__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep1__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep2__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep3__.txt")
for (i in 1:8) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sapply(dat, length)
sapply(dat, nrow)
sink("Loughrey_et_al__sequence__.fas")
for (i in 3) {
cat(">")
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$sequence[-(1:4)], collapse=""))
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$minus.pass[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep2__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$minus.pass.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep3__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$minus.pass.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep1__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$plus.pass[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep2__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$plus.pass.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep3__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat(paste(dat[[i]]$plus.pass.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep1__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep2__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__minus__rep3__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$minus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep1__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep2__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.1[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
sink("Loughrey_et_al__plus__rep3__.txt")
for (i in 3) {
cat(names(dat)[i])
cat("\n")
cat(paste(dat[[i]]$plus.counts.2[-(1:4)], collapse="\t"))
cat("\n")
cat("\n")
}
sink()
seq
seq[["5S"]]
rmAttr(seq[["5S"]], class=NULL)
rmAttr(seq[["5S"]], except=NULL)
getwd()
readLines(file("./Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates_sequence.rtf"), open="r")
readLines(file("./Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates_sequence.rtf", open="r"))
readLines(file("../Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates_sequence.rtf", open="r"))
readLines(file("../Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates_sequence.txt", open="r"))
readLines(file("../Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates_sequence.txt", open="r"))
readLines(file("../Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates_sequence.txt", open="r"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
a <- "../Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates_sequence.txt"
a
strsplit(a, split="__")
a <- "../Sample_Data/SHAPE-Seq_Loughrey_et_al_8_transcripts_3_replicates__sequence.txt"
strsplit(a, split="__")
shiny::runApp()
shiny::runApp()
load("/Users/aviran/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code/Saved_results/data_Untitled1.RData")
names(dat)
dat$aden
shiny::runApp()
load("/Users/aviran/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code/Saved_results/data_Untitled1.RData")
names(dat)
shiny::runApp()
shiny::runApp()
a <- data.frame()
a$p <- c(1,2,3,4)
a <- cbind(a, p=c(1,2,3,4))
a <- data.frame(, 4)
a <- data.frame(, 4,)
outer(c("a", "b"), 1:#)
outer(c("a", "b"), 1:3)
paste0(c("a", "b"), 1:3)
sapply(c("a", "b"), function(x) <- paste0(x, 1:3))
sapply(c("a", "b"), function(x) paste0(x, 1:3))
paste(sapply(c("a", "b"), function(x) paste0(x, 1:3)))
a <- matrix(1:9,3,3)
a
colnames(a) <- c("a", "b", "c")
a
a[, "a"]
cbind(d=1:3, a)
shiny::runApp()
shiny::runApp()
load("/Users/aviran/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code/Saved_results/data_Untitled1.RData")
names(dat)
dat$aden
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load("/Users/aviran/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code/Saved_results/data_Untitled1.RData")
dat
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code")
shiny::runApp()
shiny::runApp()
names(dat[[1]])
shiny::runApp()
shiny::runApp()
dat[["aden"]]
dat[["aden"]]$a
dat[["aden"]]$a <- 1
dat[["aden"]]
rm(dat)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
min(2, c(1:3))
a <- matrix(1:9, 3,3)
a
a[which(a[, -1]>2), -1] <- 2
a[which(a[, -1]>2, arr.ind=T), -1] <- 2
a
a <- matrix(1:9, 3,3)
SNR[which(SNR[, -1] > clip_at, arr.ind=T), -1] <- clip_at
which(a[, -1]>2, arr.ind=T)
a[which(a[, -1]>4, arr.ind=T), -1] <- 2
a
a <- matrix(c(1,4,6, 3,4,2,5,5,13), 3,3)
q
a
a[which(a[, -1]>4, arr.ind=T), -1] <- 2
a
a <- matrix(c(1,4,6, 3,4,2,5,5,13), 3,3)
replace(a[,-1], which(a[, -1]>4, arr.ind=T), 2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
exists(a)
?exists
exists("A")
exists("a")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
class(dat)
shiny::runApp()
shiny::runApp()
shiny::runApp()
as.numeric("NA")
as.numeric("NAs")
shiny::runApp()
shiny::runApp()
shiny::runApp()
?file.exists
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
log(-2)
log(o)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
#restructure Mod-Seq and icSHAPE datasets.
#1. Mod-Seq
files <- c(m1_B = "CountMod_sacCer3_SRR955862.tab", p1_B= "CountMod_sacCer3_SRR955864.tab",
m2_B = "CountMod_sacCer3_SRR955865.tab", p2_B= "CountMod_sacCer3_SRR955871.tab",
m1_J = "CountMod_sacCer3_SRR955872.tab", p1_J= "CountMod_sacCer3_SRR955874.tab",
m2_J = "CountMod_sacCer3_SRR955875.tab", p2_J= "CountMod_sacCer3_SRR955876.tab")
for (f in files) {
print(f)
}
setwd("~/Box Sync/SNR-CQI_rebuttal_analyses/Talkish_Mod-seq/Talkish_analysis_Krishna")
f <- files[1]
f
conn <- file(f, open="r")
lines <- readLines(conn)
length(lines)
class(lines)
lines[1]
strsplit(lines[1], split=" ")
strsplit(lines[1], split=" ")[[1]][2]
lines[2]
strsplit(lines[2], split=" ")
as.numeric(strsplit(lines[2], split=" ")[[1]])
strsplit(f, split=".tab")
files <- c(m1_B = "CountMod_sacCer3_SRR955862.tab", p1_B= "CountMod_sacCer3_SRR955864.tab",
m2_B = "CountMod_sacCer3_SRR955865.tab", p2_B= "CountMod_sacCer3_SRR955871.tab",
m1_J = "CountMod_sacCer3_SRR955872.tab", p1_J= "CountMod_sacCer3_SRR955874.tab",
m2_J = "CountMod_sacCer3_SRR955875.tab", p2_J= "CountMod_sacCer3_SRR955876.tab")
for (f in files) {
conn <- file(f, open="r")
lines <- readLines(conn)
sink(paste0(strsplit(f, split=".tab"), ".txt"))
for (i in 1:( length(lines)/2 ) ) {
cat(strsplit(lines[2*i - 1], split=" ")[[1]][2])
cat("\n")
cat(paste(as.numeric(strsplit(lines[2*i], split=" ")[[1]]), collapse="\t"))
cat("\n")
cat("\n")
}
sink()
}
shiny::runApp('~/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code')
cat("\n")
cat("\n")
shiny::runApp('~/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code')
setwd("~/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code")
shiny::runApp()
setwd("~/Box Sync/SEQualyzer/revision/SEQualyzer_tool")
shiny::runApp('Code')
file.exists("../Sample_Data/Mod-Seq_Talkish_et_al_2014_single_end_transcriptome_2_replicates_WT/CountMod_sacCer3_SRR955862__plus__rep1__.txt")
getwd()
setwd("~/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code")
file.exists("../Sample_Data/Mod-Seq_Talkish_et_al_2014_single_end_transcriptome_2_replicates_WT/CountMod_sacCer3_SRR955862__plus__rep1__.txt")
shiny::runApp()
setwd("../Sample_Data/")
getwd()
setwd("~/Box Sync/SEQualyzer/revision/SEQualyzer_tool/Code")
setwd("../Sample_Data/Mod-Seq_Talkish_et_al_2014_single_end_transcriptome_2_replicates_WT/")
getwd()
file.exists(CountMod_sacCer3_SRR955862__plus__rep1__.txt)
file.exists("CountMod_sacCer3_SRR955862__plus__rep1__.txt")
